<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ArgumentListWrapping:HNWearApplication.kt$HNWearApplication$(com.monoid.hackernews.common.view.R.integer.favorites_state_hours)</ID>
    <ID>BlockCommentInitialStarAlignment:Type.kt$/* Other default text styles to override button = TextStyle( fontFamily = FontFamily.Default, fontWeight = FontWeight.W500, fontSize = 14.sp ), caption = TextStyle( fontFamily = FontFamily.Default, fontWeight = FontWeight.Normal, fontSize = 12.sp ) */</ID>
    <ID>ForbiddenComment:ItemList.kt$// TODO: debug config</ID>
    <ID>ForbiddenComment:MainActivity.kt$MainActivity$// TODO: debug config</ID>
    <ID>FunctionNaming:HomeScreen.kt$@Composable fun HomeScreen( itemTreeRepository: ItemTreeRepository, title: String, orderedItemRepo: LiveUpdateUseCase&lt;OrderedItem&gt;, onSelectItemId: (ItemId?) -&gt; Unit, modifier: Modifier = Modifier, )</ID>
    <ID>FunctionNaming:Item.kt$@Composable fun Item( itemUi: Item?, onClickDetail: (ItemId?) -&gt; Unit, modifier: Modifier = Modifier, )</ID>
    <ID>FunctionNaming:ItemList.kt$@Composable fun ItemList( state: ScalingLazyListState, title: String, itemRows: List&lt;ItemListRow&gt;, onClickDetail: (ItemId?) -&gt; Unit, modifier: Modifier = Modifier, )</ID>
    <ID>FunctionNaming:TextBlock.kt$@Composable fun TextBlock( text: AnnotatedString, lines: Int, modifier: Modifier = Modifier, color: Color = Color.Unspecified, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, minHeight: Boolean = false, inlineContent: Map&lt;String, InlineTextContent&gt; = mapOf(), onTextLayout: (TextLayoutResult) -&gt; Unit = {}, style: TextStyle = LocalTextStyle.current )</ID>
    <ID>FunctionNaming:TextBlock.kt$@Composable fun TextBlock( text: String, lines: Int, modifier: Modifier = Modifier, color: Color = Color.Unspecified, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, minHeight: Boolean = false, onTextLayout: (TextLayoutResult) -&gt; Unit = {}, style: TextStyle = LocalTextStyle.current )</ID>
    <ID>FunctionNaming:Theme.kt$@Composable fun HackerNewsTheme( content: @Composable () -&gt; Unit )</ID>
    <ID>LongMethod:HNWearApplication.kt$HNWearApplication$override fun onCreate()</ID>
    <ID>LongParameterList:TextBlock.kt$( text: AnnotatedString, lines: Int, modifier: Modifier = Modifier, color: Color = Color.Unspecified, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, minHeight: Boolean = false, inlineContent: Map&lt;String, InlineTextContent&gt; = mapOf(), onTextLayout: (TextLayoutResult) -&gt; Unit = {}, style: TextStyle = LocalTextStyle.current )</ID>
    <ID>LongParameterList:TextBlock.kt$( text: String, lines: Int, modifier: Modifier = Modifier, color: Color = Color.Unspecified, fontSize: TextUnit = TextUnit.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, textAlign: TextAlign? = null, lineHeight: TextUnit = TextUnit.Unspecified, overflow: TextOverflow = TextOverflow.Clip, softWrap: Boolean = true, minHeight: Boolean = false, onTextLayout: (TextLayoutResult) -&gt; Unit = {}, style: TextStyle = LocalTextStyle.current )</ID>
    <ID>MagicNumber:Color.kt$0xFF03DAC5</ID>
    <ID>MagicNumber:Color.kt$0xFF3700B3</ID>
    <ID>MagicNumber:Color.kt$0xFFBB86FC</ID>
    <ID>MagicNumber:Color.kt$0xFFCF6679</ID>
    <ID>MagicNumber:TextBlock.kt$3</ID>
    <ID>MatchingDeclarationName:WearApplicationModule.kt$LifecycleOwnerQualifier</ID>
    <ID>MaxLineLength:HNWearApplication.kt$HNWearApplication$.</ID>
    <ID>MaximumLineLength:HNWearApplication.kt$HNWearApplication$ </ID>
    <ID>MultiLineIfElse:TextBlock.kt$modifier.height(blockHeightDp)</ID>
    <ID>MultiLineIfElse:TextBlock.kt$modifier.heightIn(min = blockHeightDp, max = Dp.Infinity)</ID>
    <ID>NoBlankLineBeforeRbrace:MainActivity.kt$MainActivity$ </ID>
    <ID>NoEmptyFirstLineInMethodBlock:HNWearApplication.kt$HNWearApplication$ </ID>
    <ID>NoEmptyFirstLineInMethodBlock:MainActivity.kt$MainActivity$ </ID>
    <ID>NoUnusedImports:HNWearApplication.kt$com.monoid.hackernews.wear.HNWearApplication.kt</ID>
    <ID>UnusedPrivateProperty:MainActivity.kt$MainActivity$val mainViewModel: MainViewModel = koinViewModel()</ID>
  </CurrentIssues>
</SmellBaseline>
